{
  "name": "pycaret_ext",
  "id": "pycaret_ext",
  "description": "",
  "created_on": "03/09/2022, 05:39:06",
  "last_modify": "04/10/2022, 15:13:05",
  "graphs": {
    "main": {
      "nodes": [
        {
          "id": "c8c6fdb3-09da-4605-b8e2-13d66af5a167",
          "position": {
            "x": 463,
            "y": 139
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "type": "String",
                "value": "boston"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 463,
            "y": 139
          },
          "__class__": "Node"
        },
        {
          "id": "b1f8c2da-71e7-4361-af07-6cddf1f89354",
          "position": {
            "x": 510,
            "y": 441
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "__class__": "Node"
        },
        {
          "id": "8ff1d978-f1fa-49d4-b24f-245f1af20c5c",
          "position": {
            "x": 470,
            "y": 386
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 438,
          "height": 136,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "List datasets",
            "fill": "#F74B65",
            "height": 136,
            "width": 438
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "__class__": "Node"
        },
        {
          "id": "7c9ac224-5cab-4415-a421-b977979baaeb",
          "position": {
            "x": 423,
            "y": 99
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 750,
          "height": 136,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "Train and select the best performing model",
            "fill": "#F74B65",
            "height": 136,
            "width": 750
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "__class__": "Node"
        },
        {
          "id": "9cc838ca-c9e1-4034-809d-941246a0dc69",
          "position": {
            "x": 716,
            "y": 449
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "datasets",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "info",
                "label": "info",
                "service": "datasets",
                "to": "info"
              }
            ],
            "outputs": [
              {
                "id": "info",
                "label": "info"
              }
            ],
            "configured": true,
            "options": {
              "group": null,
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                }
              ],
              "click": null,
              "icon": null,
              "values": {
                "debug": true
              }
            }
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 716,
            "y": 449
          },
          "__class__": "Node"
        },
        {
          "id": "502ba389-b409-454a-b47c-1554250626ed",
          "position": {
            "x": 982,
            "y": 187
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Selector",
            "events": null,
            "description": "### Description\nThe SELECTOR component is used to select the value of one or more object keys. The required key/s are defined using the parameter **Keys**.\n\nIn order to add other keys you need to click on the **\"Add field\"** button.\n\nIf the field **Ignore Error** is toggled, missing keys are ignored.\n\nIt's also possible to select nested key, just by writing them in a *key* field, and seperating them using a full stop. Let's consider the object in the example below: if you want to have access to the content of the \"key3\" object, you need to use the following notation \"key1.key2.key3\".\n\n\n```json\n {\"key1\":{\"key2\":{\"key3\":[\"val1\", \"val2\", \"val3\"]}}} \n```\n\n\n\n### Input\n\nThe input consists of a dictionary.\n\n\n\n### Output\n\nThe output is the value of the required key of the dictionary received as input, if only one key is selected; otherwise it's an object which contains the keys specified and their value.\n",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "ignore_err",
                  "label": "Ignor Error",
                  "type": "boolean",
                  "description": "Choose whether to ignore error in case of a missing key or not"
                },
                {
                  "name": "exclude",
                  "label": "Exclude Keys",
                  "type": "boolean",
                  "description": "If enabled, the output contains the whole input object excluding the specified keys; otherwise, only the specified keys are returned"
                },
                {
                  "name": "keys",
                  "label": "Keys",
                  "type": "multiKeyValue",
                  "validation": {
                    "required": "Required field"
                  },
                  "description": "Name of the key/s to select from the incoming message",
                  "fields": [
                    {
                      "name": "k",
                      "placeholder": "key",
                      "validation": {
                        "required": "Required field"
                      }
                    }
                  ]
                }
              ],
              "click": null,
              "icon": "RiCursorFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "ignore_err": false,
                "exclude": false,
                "keys": [
                  {
                    "k": "best",
                    "id": "66d13b6c-b139-44c5-b096-e9aa018d7aaf"
                  }
                ]
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 982,
            "y": 187
          },
          "__class__": "Node"
        },
        {
          "id": "57e55047-36fd-4c2d-b39f-91e26bc99f5c",
          "position": {
            "x": 687,
            "y": 159
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "predictor",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "fit",
                "label": "fit",
                "service": "fit",
                "to": "fit_output"
              }
            ],
            "outputs": [
              {
                "id": "fit_output",
                "label": "fit_output"
              }
            ],
            "configured": true,
            "options": {
              "group": null,
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "task",
                  "type": "select",
                  "label": "task",
                  "helper": "",
                  "group": "",
                  "value": "classification",
                  "description": "",
                  "options": [
                    "classification",
                    "regression"
                  ]
                }
              ],
              "click": null,
              "icon": null,
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "task": "regression"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 687,
            "y": 159
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-b1f8c2da-71e7-4361-af07-6cddf1f89354output-9cc838ca-c9e1-4034-809d-941246a0dc69info",
          "source": "b1f8c2da-71e7-4361-af07-6cddf1f89354",
          "sourceHandle": "output",
          "target": "9cc838ca-c9e1-4034-809d-941246a0dc69",
          "targetHandle": "info",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-c8c6fdb3-09da-4605-b8e2-13d66af5a167output-57e55047-36fd-4c2d-b39f-91e26bc99f5cfit",
          "source": "c8c6fdb3-09da-4605-b8e2-13d66af5a167",
          "sourceHandle": "output",
          "target": "57e55047-36fd-4c2d-b39f-91e26bc99f5c",
          "targetHandle": "fit",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-57e55047-36fd-4c2d-b39f-91e26bc99f5cfit_output-502ba389-b409-454a-b47c-1554250626edinput",
          "source": "57e55047-36fd-4c2d-b39f-91e26bc99f5c",
          "sourceHandle": "fit_output",
          "target": "502ba389-b409-454a-b47c-1554250626ed",
          "targetHandle": "input",
          "data": {
            "startColor": "#888",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    },
    "Untitled 1": {
      "nodes": [
        {
          "id": "dab38ec4-81da-40e1-a39a-668a3ed29b41",
          "position": {
            "x": 484,
            "y": 181
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            }
          },
          "selectable": true,
          "draggable": true,
          "__class__": "Node"
        },
        {
          "id": "220db7e8-ec7a-4b6c-b2ff-d8f5f2d17f78",
          "position": {
            "x": 805,
            "y": 244
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "propagate": true,
                "notify_warnings": true,
                "code": "for i in range(10):\n  yield dict(name=i,Dataset=i)"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "__class__": "Node"
        },
        {
          "id": "b5d7558f-c5d3-4ce9-bdb2-8832354aab30",
          "position": {
            "x": 1082,
            "y": 282
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Selector",
            "events": null,
            "description": "### Description\nThe SELECTOR component is used to select the value of one or more object keys. The required key/s are defined using the parameter **Keys**.\n\nIn order to add other keys you need to click on the **\"Add field\"** buttons.\n \nIf the field **Ignore Error** is toggled, missing key values are ignored.\n\nIt's also possible to select nested key, just by writing them in a *key* field, and seperating them using a full stop. Let's consider the object in the example below: if you want to have access to the content of the \"key3\" object, you need to use the following notation \"key1.key2.key3\".\n\n\n```json\n {\"key1\":{\"key2\":{\"key3\":[\"val1\", \"val2\", \"val3\"]}}} \n```\n\n\n\n### Input\n\nThe input consists of a dictionary.\n\n\n\n### Output\n\nThe output is the value of the required key of the dictionary received as input, if only one key is selected; otherwise it's an object which contains the keys specified and their value.\n",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "ignore_err",
                  "label": "Ignor Error",
                  "type": "boolean",
                  "description": "Choose whether to ignore error in case of a missing key or not"
                },
                {
                  "name": "keys",
                  "label": "Keys",
                  "type": "multiKeyValue",
                  "validation": {
                    "required": "Required field"
                  },
                  "description": "the name of the key to select from the incoming message",
                  "fields": [
                    {
                      "name": "k",
                      "placeholder": "key",
                      "validation": {
                        "required": "Required field"
                      }
                    }
                  ]
                }
              ],
              "click": null,
              "icon": "RiCursorFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "ignore_err": true,
                "keys": [
                  {
                    "k": "Dataset",
                    "id": "1c0e7463-2e89-4f7f-92cf-2b67053c55e8"
                  }
                ]
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "__class__": "Node"
        },
        {
          "id": "4d1966a8-e448-4c0a-ab5e-c6c44da2c266",
          "position": {
            "x": 914.5248930946032,
            "y": 435.15595985260217
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": null,
          "dragging": null,
          "data": {
            "name": "Filter",
            "events": null,
            "description": "### Description\nThe FILTER component is used to filter the input data. To configure this component, you need to define Python code that returns a boolean (true / false) that depends on the input received. The input can be retrieved using the variable **data**.\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThere are two outputs: **output** and **discarded**. Through the first output are returned the inputs that verify the condition defined inside the component, in the second those that do not verify it.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              },
              {
                "id": "discarded",
                "label": "discarded"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "Python code that return a boolean (True,False). Incoming messages that evaluates to True are sent to the first output while the others are redirected to the second one",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiFilter2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "notify_warnings": true,
                "code": "return data[\"Dataset\"]%2==0"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-dab38ec4-81da-40e1-a39a-668a3ed29b41output-220db7e8-ec7a-4b6c-b2ff-d8f5f2d17f78input",
          "source": "dab38ec4-81da-40e1-a39a-668a3ed29b41",
          "sourceHandle": "output",
          "target": "220db7e8-ec7a-4b6c-b2ff-d8f5f2d17f78",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-220db7e8-ec7a-4b6c-b2ff-d8f5f2d17f78output-4d1966a8-e448-4c0a-ab5e-c6c44da2c266input",
          "source": "220db7e8-ec7a-4b6c-b2ff-d8f5f2d17f78",
          "sourceHandle": "output",
          "target": "4d1966a8-e448-4c0a-ab5e-c6c44da2c266",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-4d1966a8-e448-4c0a-ab5e-c6c44da2c266output-b5d7558f-c5d3-4ce9-bdb2-8832354aab30input",
          "source": "4d1966a8-e448-4c0a-ab5e-c6c44da2c266",
          "sourceHandle": "output",
          "target": "b5d7558f-c5d3-4ce9-bdb2-8832354aab30",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    }
  },
  "open": [
    "main"
  ],
  "active": "main",
  "version": "1.0.0",
  "__class__": "Project"
}